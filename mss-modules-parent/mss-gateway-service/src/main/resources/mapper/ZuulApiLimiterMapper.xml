<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoshasha.gateway.mapper.ZuulApiLimiterMapper">
  <resultMap id="BaseResultMap" type="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="route_id" jdbcType="BIGINT" property="routeId" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="service_id" jdbcType="VARCHAR" property="serviceId" />
    <result column="limiter_enabled" jdbcType="BIT" property="limiterEnabled" />
    <result column="permits_per_second" jdbcType="INTEGER" property="permitsPerSecond" />
    <result column="permits" jdbcType="INTEGER" property="permits" />
    <result column="timeout" jdbcType="BIGINT" property="timeout" />
    <result column="time_unit" jdbcType="VARCHAR" property="timeUnit" />
    <result column="error_code" jdbcType="INTEGER" property="errorCode" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">

    id, route_id,path, service_id, limiter_enabled, permits_per_second, permits, timeout, time_unit,
    error_code, error_msg, create_user, create_time, update_user, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">

    select 
    <include refid="Base_Column_List" />
    from base_zuul_api_limiter
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">

    delete from base_zuul_api_limiter
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity" useGeneratedKeys="true" keyProperty="id">

    insert into base_zuul_api_limiter (route_id, path, service_id,
      limiter_enabled, permits_per_second, permits, 
      timeout, time_unit, error_code, 
      error_msg, create_user, create_time, 
      update_user, update_time)
    values (#{routeId,jdbcType=BIGINT}, #{path,jdbcType=VARCHAR}, #{serviceId,jdbcType=VARCHAR},
      #{limiterEnabled,jdbcType=BIT}, #{permitsPerSecond,jdbcType=INTEGER}, #{permits,jdbcType=INTEGER}, 
      #{timeout,jdbcType=BIGINT}, #{timeUnit,jdbcType=VARCHAR}, #{errorCode,jdbcType=INTEGER}, 
      #{errorMsg,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity"  useGeneratedKeys="true" keyProperty="id">

    insert into base_zuul_api_limiter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        route_id,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="limiterEnabled != null">
        limiter_enabled,
      </if>
      <if test="permitsPerSecond != null">
        permits_per_second,
      </if>
      <if test="permits != null">
        permits,
      </if>
      <if test="timeout != null">
        timeout,
      </if>
      <if test="timeUnit != null">
        time_unit,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="routeId != null">
        #{routeId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="limiterEnabled != null">
        #{limiterEnabled,jdbcType=BIT},
      </if>
      <if test="permitsPerSecond != null">
        #{permitsPerSecond,jdbcType=INTEGER},
      </if>
      <if test="permits != null">
        #{permits,jdbcType=INTEGER},
      </if>
      <if test="timeout != null">
        #{timeout,jdbcType=BIGINT},
      </if>
      <if test="timeUnit != null">
        #{timeUnit,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity">

    update base_zuul_api_limiter
    <set>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="limiterEnabled != null">
        limiter_enabled = #{limiterEnabled,jdbcType=BIT},
      </if>
      <if test="permitsPerSecond != null">
        permits_per_second = #{permitsPerSecond,jdbcType=INTEGER},
      </if>
      <if test="permits != null">
        permits = #{permits,jdbcType=INTEGER},
      </if>
      <if test="timeout != null">
        timeout = #{timeout,jdbcType=BIGINT},
      </if>
      <if test="timeUnit != null">
        time_unit = #{timeUnit,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity">
    update base_zuul_api_limiter
    set path = #{path,jdbcType=VARCHAR},
      service_id = #{serviceId,jdbcType=VARCHAR},
      limiter_enabled = #{limiterEnabled,jdbcType=BIT},
      permits_per_second = #{permitsPerSecond,jdbcType=INTEGER},
      permits = #{permits,jdbcType=INTEGER},
      timeout = #{timeout,jdbcType=BIGINT},
      time_unit = #{timeUnit,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=INTEGER},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="selectAll" resultType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity" parameterType="com.miaoshasha.gateway.entity.ZuulRateLimiterEntity">
    select
    <include refid="Base_Column_List"/>
    from base_zuul_api_limiter
    <where>
      <if test="path != null and path != '' ">
        AND path = #{path}
      </if>
      <if test="serviceId != null and serviceId!=''">
        AND service_id = #{serviceId}
      </if>
      <if test="limiterEnabled != null ">
        AND limiter_enabled = #{limiterEnabled}
      </if>
    </where>
     order by create_time
  </select>
</mapper>