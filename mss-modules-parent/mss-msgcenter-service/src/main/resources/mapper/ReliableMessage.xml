<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoshasha.msgcenter.mapper.ReliableMessageMapper">
    <sql id="Base_Column_List">
 			message_id,message_body,message_data_type,consumer_queue,routing_key,message_send_times,already_dead,status,create_time,update_time,create_user,update_user,notes,version,biz_unique_id
	</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long"
            resultType="com.miaoshasha.common.entity.message.ReliableMessage">
        select
        <include refid="Base_Column_List"/>
        from reliable_message where message_id = #{messageId}

    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from reliable_message where message_id = #{messageId}
	</delete>

    <insert id="insert" parameterType="com.miaoshasha.common.entity.message.ReliableMessage" keyProperty="messageId"
            useGeneratedKeys="true">
		  insert into reliable_message
		  ( message_id,message_body,message_data_type,consumer_queue,routing_key,message_send_times,already_dead,status,create_time,
		  update_time,create_user,update_user,notes,version,biz_unique_id)
		  values
		  (#{messageId},#{messageBody},#{messageDataType},#{consumerQueue},#{routingKey},#{messageSendTimes},#{alreadyDead},#{status},
		  #{createTime},#{updateTime},#{createUser},#{updateUser},#{notes},#{version},#{bizUniqueId})
 	</insert>

    <insert id="insertSelective" parameterType="com.miaoshasha.common.entity.message.ReliableMessage"
            keyProperty="messageId"
            useGeneratedKeys="true">
        insert into reliable_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">message_id,</if>
            <if test="messageBody != null">message_body,</if>
            <if test="messageDataType != null">message_data_type,</if>
            <if test="consumerQueue != null">consumer_queue,</if>
            <if test="routingKey != null">routing_key,</if>
            <if test="messageSendTimes != null">message_send_times,</if>
            <if test="alreadyDead != null">already_dead,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
            <if test="notes != null">notes,</if>
            <if test="version != null">version,</if>
            <if test="bizUniqueId != null">biz_unique_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">#{messageId},</if>
            <if test="messageBody != null">#{messageBody},</if>
            <if test="messageDataType != null">#{messageDataType},</if>
            <if test="consumerQueue != null">#{consumerQueue},</if>
            <if test="routingKey != null">#{routingKey},</if>
            <if test="messageSendTimes != null">#{messageSendTimes},</if>
            <if test="alreadyDead != null">#{alreadyDead},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
            <if test="notes != null">#{notes},</if>
            <if test="version != null">#{version},</if>
            <if test="bizUniqueId != null">#{bizUniqueId},</if>

        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.miaoshasha.common.entity.message.ReliableMessage">
        update
        reliable_message
        <set>
            <if test="messageBody != null">message_body=#{messageBody},</if>
            <if test="messageDataType != null">message_data_type=#{messageDataType},</if>
            <if test="consumerQueue != null">consumer_queue=#{consumerQueue},</if>
            <if test="routingKey != null">routing_key=#{routingKey},</if>
            <if test="messageSendTimes != null">message_send_times=#{messageSendTimes},</if>
            <if test="alreadyDead != null">already_dead=#{alreadyDead},</if>
            <if test="status != null">status=#{status},</if>
            <if test="createTime != null">create_time=#{createTime},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
            <if test="createUser != null">create_user=#{createUser},</if>
            <if test="updateUser != null">update_user=#{updateUser},</if>
            <if test="notes != null">notes=#{notes},</if>
            <if test="version != null">version=#{version},</if>
            <if test="bizUniqueId != null">biz_unique_id=#{bizUniqueId},</if>
        </set>
        where message_id = #{messageId}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.miaoshasha.common.entity.message.ReliableMessage">
		update reliable_message
		set
		message_body=#{messageBody},
		message_data_type=#{messageDataType},
        consumer_queue=#{consumerQueue},
        routing_key=#{routingKey},
        message_send_times=#{messageSendTimes},
        already_dead=#{alreadyDead},
        status=#{status},
        update_time=#{updateTime},
        update_user=#{updateUser},
        notes=#{notes},
        version=#{version},
        biz_unique_id=#{bizUniqueId}
		where message_id = #{messageId}
	</update>

    <delete id="deleteMessageByBizId">
		delete from reliable_message where biz_unique_id=#{bizUniqueId}
    </delete>

    <select id="getDeadMessageByQueue" resultType="com.miaoshasha.common.entity.message.ReliableMessage"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from reliable_message where consumer_queue=#{consumerQueue}
        and already_dead = 'Y' order by create_time limit #{startIndex},#{pageSize}
    </select>

    <select id="getCountDeadMessageByQueue" resultType="java.lang.Long">
         select count(*) from reliable_message where consumer_queue=#{consumerQueue} and already_dead = 'Y'
    </select>

    <select id="getListTimeOut" resultType="com.miaoshasha.common.entity.message.ReliableMessage">
      select
      <include refid="Base_Column_List"/>
        from reliable_message
        <where>
            <if test="createTime !=null and createTime !='' ">
                AND create_time &lt;= #{createTime}
            </if>
            <if test="alreadyDead !=null and alreadyDead !=''">
                AND already_dead = #{alreadyDead}
            </if>
            <if test="status != null and status!=''">
                AND status=#{status}
            </if>
        </where>
        order by create_time
        limit #{startIndex},#{pageSize}
    </select>

    <select id="getCountTimeOut" resultType="java.lang.Long">
        select count(*) from reliable_message
        <where>
            <if test="createTime !=null and createTime !='' ">
                AND create_time &lt;= #{createTime}
            </if>
            <if test="alreadyDead !=null and alreadyDead !=''">
                AND already_dead = #{alreadyDead}
            </if>
            <if test="status != null and status!=''">
                AND status=#{status}
            </if>
        </where>
    </select>
</mapper>
