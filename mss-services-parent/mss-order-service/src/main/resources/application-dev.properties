server.port=8002

#eureka
eureka.client.serviceUrl.defaultZone=http://192.168.177.239:9001/eureka/
#eureka.base.serviceUrl.defaultZone=http://localhost:9001/eureka/
#租期更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds =10
#租期到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds =30

#redis 配置
#spring.session.store-type=redis
spring.redis.cluster.nodes=192.168.177.190:6379,192.168.177.190:6389,192.168.177.190:6399
#spring.redis.cluster.nodes=59.110.159.115:6379
#spring.redis.password=admin
spring.redis.cluster.max-redirects=10
spring.redis.timeout=1500

#rabbitmq 配置
spring.rabbitmq.host=59.110.159.115
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
spring.rabbitmq.virtual-host=/
spring.rabbitmq.publisher-confirms=true
#配置初始化消费者数量
spring.rabbitmq.listener.simple.concurrency=5
#配置初始化消费者最大数量
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.prefetch=1

#mongodb，集群配置mongodb://base:pwd@ip1:port1,ip2:port2/database
spring.data.mongodb.uri=mongodb://boss01:123456@192.168.177.196:27017/bosslogdb

#mysql数据源，支持分库分表
sharding.jdbc.datasource.names=orderdb0,orderdb1
#sharding.jdbc.config.sharding.defaultDataSourceName=orderdb
sharding.jdbc.datasource.orderdb0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.orderdb0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.orderdb0.jdbc-url=jdbc:mysql://59.110.159.115:3306/orderdb0?characterEncoding=utf8&useSSL=false
sharding.jdbc.datasource.orderdb0.username=root
sharding.jdbc.datasource.orderdb0.password=1qaz!QAZ


sharding.jdbc.datasource.orderdb1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.orderdb1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.orderdb1.jdbc-url=jdbc:mysql://59.110.159.115:3306/orderdb1?characterEncoding=utf8&useSSL=false
sharding.jdbc.datasource.orderdb1.username=root
sharding.jdbc.datasource.orderdb1.password=1qaz!QAZ

#根据用户id取模分库
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=orderdb$->{order_id % 2}

#根据订单id取模分5个表
sharding.jdbc.config.sharding.tables.order_info.actual-data-nodes=orderdb$->{0..1}.order_info_$->{0..4}
sharding.jdbc.config.sharding.tables.order_info.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order_info.table-strategy.inline.algorithm-expression=order_info_$->{order_id % 5}
#sharding.jdbc.config.sharding.tables.order_info.key-generator-column-name=order_id

sharding.jdbc.config.sharding.tables.order_product.actual-data-nodes=orderdb$->{0..1}.order_product_$->{0..4}
sharding.jdbc.config.sharding.tables.order_product.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order_product.table-strategy.inline.algorithm-expression=order_product_$->{order_id % 5}
sharding.jdbc.config.sharding.tables.order_product.key-generator-column-name=pid

sharding.jdbc.config.sharding.tables.order_send.actual-data-nodes=orderdb$->{0..1}.order_send_$->{0..4}
sharding.jdbc.config.sharding.tables.order_send.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order_send.table-strategy.inline.algorithm-expression=order_send_$->{order_id % 5}
sharding.jdbc.config.sharding.tables.order_send.key-generator-column-name=pid
