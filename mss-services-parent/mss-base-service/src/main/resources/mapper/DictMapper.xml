<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoshasha.base.mapper.system.DictMapper">
  <resultMap id="BaseResultMap" type="com.miaoshasha.common.entity.system.Dict">

    <id column="dict_id" jdbcType="BIGINT" property="dictId" />
    <result column="dict_code" jdbcType="VARCHAR" property="dictCode" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">

    dict_id, dict_code, dict_name, state, notes, create_time, create_user,update_user,update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select 
    <include refid="Base_Column_List" />
    from base_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from base_dict
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miaoshasha.common.entity.system.Dict" keyProperty="dictId" useGeneratedKeys="true">

    insert into base_dict ( dict_code, dict_name,
      state, notes, create_time, 
      create_user)
    values ( #{dictCode,jdbcType=VARCHAR}, #{dictName,jdbcType=VARCHAR},
      #{state,jdbcType=INTEGER}, #{notes,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.miaoshasha.common.entity.system.Dict">

    insert into base_dict
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="dictCode != null">
        dict_code,
      </if>
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=INTEGER},
      </if>
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miaoshasha.common.entity.system.Dict">

    update base_dict
    <set>
      <if test="dictCode != null">
        dict_code = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miaoshasha.common.entity.system.Dict">

    update base_dict
    set dict_code = #{dictCode,jdbcType=VARCHAR},
      dict_name = #{dictName,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
</mapper>