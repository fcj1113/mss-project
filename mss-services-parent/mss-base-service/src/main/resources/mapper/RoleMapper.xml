<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoshasha.base.mapper.user.RoleMapper">
  <resultMap id="BaseResultMap" type="com.miaoshasha.common.entity.user.Role">

    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>

  <sql id="Base_Column_List">
    role_id, role_code, parent_id, role_name, role_desc, state, create_time, create_user, 
    update_time, update_user
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from base_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.miaoshasha.common.entity.user.Role">

    insert into base_role (role_id, role_code, parent_id, 
      role_name, role_desc, state, 
      create_time, create_user, update_time, 
      update_user)
    values (#{roleId,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=BIGINT})
  </insert>

  <insert id="insertSelective" parameterType="com.miaoshasha.common.entity.user.Role">

    insert into base_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.miaoshasha.common.entity.user.Role">

    update base_role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miaoshasha.common.entity.user.Role">

    update base_role
    set role_code = #{roleCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>

  <select id="getRoleByUserId" resultType="com.miaoshasha.common.entity.user.Role">
        SELECT  a.role_id, a.role_code, a.parent_id, a.role_name, a.role_desc, a.state, a.create_time, a.create_user, a.update_time, a.update_user
        FROM base_role a, base_user_role b WHERE a.role_id = b.role_id AND b.user_id=#{userId,jdbcType=BIGINT}
  </select>
</mapper>