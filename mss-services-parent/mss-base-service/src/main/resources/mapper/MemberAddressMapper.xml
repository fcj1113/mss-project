<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoshasha.base.mapper.member.MemberAddressMapper">
    <resultMap id="BaseResultMap" type="com.miaoshasha.common.entity.member.MemberAddress">

        <id column="address_id" jdbcType="BIGINT" property="addressId"/>
        <result column="member_id" jdbcType="BIGINT" property="memberId"/>
        <result column="contacts" jdbcType="VARCHAR" property="contacts"/>
        <result column="contacts_phone" jdbcType="VARCHAR" property="contactsPhone"/>
        <result column="province" jdbcType="BIGINT" property="province"/>
        <result column="city" jdbcType="BIGINT" property="city"/>
        <result column="county" jdbcType="BIGINT" property="county"/>
        <result column="street" jdbcType="BIGINT" property="street"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="all_address" jdbcType="VARCHAR" property="allAddress"/>
        <result column="postcode" jdbcType="VARCHAR" property="postcode"/>
        <result column="is_default" jdbcType="TINYINT" property="isDefault"/>
        <result column="notes" jdbcType="VARCHAR" property="notes"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
    </resultMap>
    <sql id="Base_Column_List">
    address_id, member_id, contacts, contacts_phone, province, city, county, street,
    address, all_address, postcode, is_default, notes, create_time, create_user
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_member_address
        where address_id = #{addressId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from base_member_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.miaoshasha.common.entity.member.MemberAddress">
    insert into base_member_address (address_id, member_id, contacts,
      contacts_phone, province, city, 
      county, street, address, 
      all_address, postcode, is_default, 
      notes, create_time, create_user
      )
    values (#{addressId,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{contacts,jdbcType=VARCHAR}, 
      #{contactsPhone,jdbcType=VARCHAR}, #{province,jdbcType=BIGINT}, #{city,jdbcType=BIGINT}, 
      #{county,jdbcType=BIGINT}, #{street,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{allAddress,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, #{isDefault,jdbcType=TINYINT}, 
      #{notes,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.miaoshasha.common.entity.member.MemberAddress">
        insert into base_member_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="addressId != null">
                address_id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="contacts != null">
                contacts,
            </if>
            <if test="contactsPhone != null">
                contacts_phone,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="county != null">
                county,
            </if>
            <if test="street != null">
                street,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="allAddress != null">
                all_address,
            </if>
            <if test="postcode != null">
                postcode,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="addressId != null">
                #{addressId,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="contacts != null">
                #{contacts,jdbcType=VARCHAR},
            </if>
            <if test="contactsPhone != null">
                #{contactsPhone,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=BIGINT},
            </if>
            <if test="city != null">
                #{city,jdbcType=BIGINT},
            </if>
            <if test="county != null">
                #{county,jdbcType=BIGINT},
            </if>
            <if test="street != null">
                #{street,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="allAddress != null">
                #{allAddress,jdbcType=VARCHAR},
            </if>
            <if test="postcode != null">
                #{postcode,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.miaoshasha.common.entity.member.MemberAddress">
        update base_member_address
        <set>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="contacts != null">
                contacts = #{contacts,jdbcType=VARCHAR},
            </if>
            <if test="contactsPhone != null">
                contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=BIGINT},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=BIGINT},
            </if>
            <if test="county != null">
                county = #{county,jdbcType=BIGINT},
            </if>
            <if test="street != null">
                street = #{street,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="allAddress != null">
                all_address = #{allAddress,jdbcType=VARCHAR},
            </if>
            <if test="postcode != null">
                postcode = #{postcode,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
        </set>
        where address_id = #{addressId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.miaoshasha.common.entity.member.MemberAddress">
        update base_member_address
        set member_id = #{memberId,jdbcType=BIGINT},
        contacts = #{contacts,jdbcType=VARCHAR},
        contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
        province = #{province,jdbcType=BIGINT},
        city = #{city,jdbcType=BIGINT},
        county = #{county,jdbcType=BIGINT},
        street = #{street,jdbcType=BIGINT},
        address = #{address,jdbcType=VARCHAR},
        all_address = #{allAddress,jdbcType=VARCHAR},
        postcode = #{postcode,jdbcType=VARCHAR},
        is_default = #{isDefault,jdbcType=TINYINT},
        notes = #{notes,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_user = #{createUser,jdbcType=BIGINT}
        where address_id = #{addressId,jdbcType=BIGINT}
    </update>
</mapper>